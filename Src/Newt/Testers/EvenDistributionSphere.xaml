<Window x:Class="Game.Newt.Testers.EvenDistributionSphere"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Even Distribution Sphere" ResizeMode="CanResizeWithGrip" Width="773" Height="609" Loaded="Window_Loaded">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVis"/>
    </Window.Resources>

    <Grid Background="#404040">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Background="#B0B0B0" BorderBrush="#1F1F1E" BorderThickness="1" CornerRadius="3" Padding="4,4,1,4" Margin="9,12,0,12">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Padding="0,0,3,0">
                    <StackPanel Grid.IsSharedSizeScope="True">
                        <!-- Add Dot -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="label"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Radius" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <TextBox Grid.Column="2" Grid.Row="0" Name="txtRadius" Text="10" TextChanged="CalcDist_TextChanged"/>

                            <TextBlock Grid.Column="0" Grid.Row="1" Text="#" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <TextBox Grid.Column="2" Grid.Row="1" Name="txtNumDots" Text="10"/>

                            <!-- TODO: In order to implement this, this window should use the methods in Math3D.  If that happens, some functionality gets hidden (like Calculate Forces button, checkboxes for choosing which forces to apply) - or expose some of that functionality publically -->
                            <!-- Or copy code from Math3D -->
                            <CheckBox Visibility="Collapsed" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" Content="Random weights"/>
                        </Grid>

                        <Button Name="btnAddDots" Content="Add Dots" Margin="0,4,0,0" Click="btnAddDots_Click"/>
                        <Button Name="btnAddStaticDots" Content="Add Static Dots" Margin="0,2,0,0" Click="btnAddStaticDots_Click"/>

                        <!-- Forces -->
                        <CheckBox IsChecked="True" Name="chkInteriorPoints" Content="Interior points" Margin="0,12,0,0">
                            <CheckBox.ToolTip>
                                <TextBlock>True: Points are inside the sphere<LineBreak/>False: Points are only on the shell of the sphere</TextBlock>
                            </CheckBox.ToolTip>
                        </CheckBox>
                        <CheckBox IsChecked="True" Name="chkInwardForce" Content="Inward Force" Visibility="{Binding Path=IsChecked, ElementName=chkSurfaceOnly, Converter={StaticResource boolToVis}}"/>
                        <CheckBox IsChecked="True" Name="chkRepulsiveForce" Content="Repulsive Force"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="label"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <CheckBox Grid.Column="0" Grid.Row="0" Name="chkCalcDist" Content="Calc Dist" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <TextBox Grid.Column="2" Grid.Row="0" Name="txtCalcDist" Text="10"/>

                            <TextBlock Grid.Column="2" Grid.Row="1" Name="lblCalcDistCalculated" Text=""/>
                        </Grid>

                        <Button Name="btnCalculateForces" Content="Calculate Forces" Click="btnCalculateForces_Click" />

                        <!-- Move -->
                        <Grid Margin="0,12,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="label"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0" Grid.Row="0" Text="%" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <TextBox Grid.Column="2" Grid.Row="0" Name="txtMovePercent" Text="10"/>
                        </Grid>

                        <CheckBox Name="chkShowForcesAfterMove" IsChecked="True" Content="Show forces after move"/>

                        <CheckBox Name="chkShowRadius" IsChecked="False" Content="Show radius"/>

                        <!-- TODO: Use these instead of chkShowRadius -->
                        <!--<RadioButton IsChecked="True" Name="radShowNone" Content="None"/>
                        <RadioButton Name="radShowRadius" Content="Radius"/>
                        <RadioButton Name="radShowVoronoi" Content="Voronoi"/>-->

                        <Button Name="btnMovePoints" Content="Move Points" Margin="0,4,0,0" Click="btnMovePoints_Click"/>
                    </StackPanel>
                </ScrollViewer>

                <!-- Results -->
                <StackPanel Grid.Row="1">
                    <UniformGrid Columns="2">
                        <TextBlock Text="# Dots" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock Name="lblTotalDots" Text="" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="Aprox # Dots" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock Name="lblApproxDots" Text="" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="Actual Radius" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBlock Name="lblActualRadius" Text="" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </UniformGrid>

                    <Button Name="btnClearDots" Content="Clear Dots" Click="btnClearDots_Click" Margin="0,12,0,0"/>
                    <Button Name="btnClearDebugVisuals" Content="Clear debug visuals" Click="btnClearDebugVisuals_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Viewport -->
        <Border Grid.Column="1" Name="grdViewPort" Background="#D0D0D0" BorderThickness="2" BorderBrush="#1F1F1E" CornerRadius="3" Margin="9,12,12,12">
            <Viewport3D Name="_viewport" IsHitTestVisible="False">
                <!-- Camera -->
                <Viewport3D.Camera>
                    <PerspectiveCamera x:Name="_camera" Position="0,-25,25" LookDirection="0,1,-1" UpDirection="0,1,0" FieldOfView="45"/>
                </Viewport3D.Camera>
                <!-- Lights -->
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <Model3DGroup>
                            <AmbientLight Color="DimGray" />
                            <DirectionalLight Color="White" Direction="1,-1,-1" />
                            <DirectionalLight Color="#303030" Direction="-1,1,1" />
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
            </Viewport3D>
        </Border>
    </Grid>
</Window>
