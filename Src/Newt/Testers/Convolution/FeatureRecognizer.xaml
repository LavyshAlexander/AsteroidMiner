<Window x:Class="Game.Newt.Testers.Convolution.FeatureRecognizer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Feature Recognizer" Width="1000" Height="750" Closed="Window_Closed">
    <Window.Resources>

        <Style x:Key="leftTab" TargetType="TabItem">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Content="{TemplateBinding Content}">
                            <ContentPresenter.LayoutTransform>
                                <RotateTransform Angle="270" />
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="3,8" />
        </Style>

        <Style x:Key="rightTab" TargetType="TabItem">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Content="{TemplateBinding Content}">
                            <ContentPresenter.LayoutTransform>
                                <RotateTransform Angle="-270" />
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="3,8" />
        </Style>

        <Style x:Key="toolButton" TargetType="Button">
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX=".8" ScaleY=".8"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="majorBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="#20000000"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Background" Value="White"/>
        </Style>

        <ContextMenu x:Key="extractContextMenu">
            <MenuItem Header="View" Click="ExtractView_Click"/>
            <MenuItem Header="Edit" Click="ExtractEdit_Click"/>
            <MenuItem Header="Remove Section" Click="RemoveSection_Click">
                <MenuItem.ToolTip>
                    <TextBlock>Puts a random dead spot in the convolution<LineBreak/>(good for suppressing features that don't matter)</TextBlock>
                </MenuItem.ToolTip>
            </MenuItem>
            <MenuItem Header="Delete" Click="ExtractDelete_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="extractResultContextMenu">
            <MenuItem Header="View" Click="ExtractResultView_Click"/>
        </ContextMenu>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <TabControl Grid.Column="0" TabStripPlacement="Left">
            <TabItem Header="Session" Style="{StaticResource leftTab}">
                <StackPanel Margin="8">
                    <ComboBox Name="cboSession" IsEditable="True"/>

                    <UniformGrid Columns="2" Margin="0,4,0,0">
                        <Button Name="btnNewSession" Content="new" Click="btnNewSession_Click"/>
                        <Button Name="btnSaveSession" Content="save" Click="btnSaveSession_Click"/>
                        <Button Name="btnLoadSession" Content="load" Click="btnLoadSession_Click"/>
                    </UniformGrid>
                </StackPanel>
            </TabItem>

            <TabItem IsSelected="True" Header="Images" Style="{StaticResource leftTab}">
                <Grid Margin="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <!-- Add Image -->
                    <ComboBox Grid.Column="0" Grid.Row="0" Name="cboImageLabel" IsEditable="True"/>
                    <Button Grid.Column="2" Grid.Row="0" Name="btnAddImage" Content="Add image..." Click="btnAddImage_Click"/>

                    <!-- Treeview -->
                    <Border Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" BorderThickness="1" BorderBrush="#18000000" Background="#18FFFFFF" Padding="4">
                        <TreeView Name="treeImages" BorderBrush="Transparent" Background="Transparent" MinWidth="120" SelectedItemChanged="pnlImages_SelectedItemChanged"/>
                    </Border>

                    <!-- Expand/Collapse all -->
                    <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.IsSharedSizeScope="True" Margin="0,-8,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="a"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="auto" SharedSizeGroup="a"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Name="btnCollapseAll" Content="-" ToolTip="Collapse All" Style="{StaticResource toolButton}" Click="btnCollapseAll_Click"/>
                        <Button Grid.Column="2" Name="btnExpandAll" Content="+" ToolTip="Expand All" Style="{StaticResource toolButton}" Click="btnExpandAll_Click"/>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

        <TabControl Grid.Column="2" TabStripPlacement="Right">
            <TabItem Header="Extract Analyzers" Style="{StaticResource rightTab}">
                <Grid Margin="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="8"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <StackPanel.LayoutTransform>
                                <ScaleTransform ScaleX=".85" ScaleY=".85"/>
                            </StackPanel.LayoutTransform>

                            <CheckBox IsChecked="True" Name="chkPrefilterNone" Content="None"/>
                            <CheckBox IsChecked="True" Name="chkPrefilterGaussian" Content="Gaussian"/>
                            <CheckBox IsChecked="True" Name="chkPrefilterGaussianSubtract" Content="Gaussian Subtract"/>
                            <CheckBox IsChecked="True" Name="chkPrefilterMaxAbsSobel" ToolTip="Standard edge detect" Content="MaxAbs Sobel"/>
                            <CheckBox IsChecked="True" Name="chkPrefilterGaussianEdge" ToolTip="Guassian, then edge detect" Content="Gaussian+Edge"/>
                        </StackPanel>

                        <StackPanel Grid.Column="2">
                            <CheckBox Name="chkIsSquare" Content="is square"/>
                            <Button Content="New Extract" Click="NewExtract_Click"/>

                            <!-- Edge Colors -->
                            <ComboBox Name="cboEdgeColors" ToolTip="Edge result colors" Margin="0,8,0,0" SelectionChanged="cboEdgeColors_SelectionChanged"/>
                        </StackPanel>

                        <!-- Extract list -->
                        <Border Grid.Column="4" Style="{StaticResource majorBorder}">
                            <ScrollViewer MaxHeight="200" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                <WrapPanel Name="panelExtracts" Background="Transparent" MouseUp="panelExtracts_MouseUp"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>

                    <!-- Selected extract results -->
                    <Border Grid.Row="2" Style="{StaticResource majorBorder}">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <StackPanel Name="pnlExtractResults">
                                <Rectangle Height="80"/>
                                <TextBlock Text="NOTE: This tester is a flawed design" FontSize="20" Foreground="Red"/>
                                <TextBlock Text="Analyze bright spots is too expensive (could be optimized, but not enough)" FontSize="14" Foreground="Red"/>
                                <TextBlock Text="Convolution chains and/or MaxPool and a simple neural net could do the job better" FontSize="14" Foreground="Red"/>
                            </StackPanel>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </TabItem>

            <!-- This tester already has too much code, I'll make a v2 -->
            <TabItem Visibility="Collapsed" Header="Recognizers" Style="{StaticResource rightTab}">
                <Canvas>

                    <Ellipse Canvas.Top="400" Canvas.Left="300" Width="300" Height="200">
                        <Ellipse.Fill>
                            <RadialGradientBrush>
                                <RadialGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="#FF000000"/>
                                    <GradientStop Offset=".25" Color="#80000000"/>
                                    <GradientStop Offset="1" Color="#00000000"/>
                                </RadialGradientBrush.GradientStops>
                            </RadialGradientBrush>
                        </Ellipse.Fill>

                        <Ellipse.LayoutTransform>
                            <RotateTransform CenterX="250"  CenterY="250" Angle="30"/>
                        </Ellipse.LayoutTransform>
                    </Ellipse>


                </Canvas>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
